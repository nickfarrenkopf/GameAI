Train time: 9 hours

        hidde_encode = [2, 3, 4, 5, 6, 7]
        pools_encode = [2, 2, 2, 2, 2, 2]
        hidde_decode = [6, 5, 4, 3, 2, 1]
        pools_decode = [1, 1, 1, 1, 1, 1]
        hidden_dense = [512, 512]
        n_latent = 64
        hidden_encode = [2 ** i for i in hidde_encode]
        hidden_decode = [2 ** i for i in hidde_decode]
        AUTO.new(paths, name, h, w, length=le, patch=5, print_me=True,
                 hidden_encode=hidden_encode, pools_encode=pools_encode,
                 hidden_latent=hidden_dense, n_latent=n_latent,
                 pools_decode=pools_decode, hidden_decode=hidden_decode)

Creating autoencoder network...
 - C:\Users\Nick\Desktop\Ava\Programs\GameAI\Emulator\data\pacman\network\AUTO_pacman_512_512_3_6_2_64
 - input shape: (?, 512, 512, 3)
 - encode: (?, 256, 256, 4)
 - encode: (?, 128, 128, 8)
 - encode: (?, 64, 64, 16)
 - encode: (?, 32, 32, 32)
 - encode: (?, 16, 16, 64)
 - encode: (?, 8, 8, 128)
 - flat: (?, 8192)
 - latent: (?, 64)
 - dense: (?, 512)
 - dense: (?, 512)
 - dense: (?, 64)
 - reshaped: (?, 8, 8, 1)
 - decode: (?, 8, 8, 64)
 - decode: (?, 8, 8, 32)
 - decode: (?, 8, 8, 16)
 - decode: (?, 8, 8, 8)
 - decode: (?, 8, 8, 4)
 - decode: (?, 8, 8, 2)
 - dense: (?, 786432)
 - output: (?, 786432)
Created AUTO_pacman_512_512_3_6_2_64 network in 8.073418378829956

Training on data with iters
Iter 0  Loss 181874.12500  IO 181874.12500  KL 0.00488
Iter 500  Loss 110564.26562  IO 110564.26562  KL 0.00000
Iter 1000  Loss 68244.21875  IO 68244.21875  KL 0.00000
Iter 1500  Loss 46669.45703  IO 46669.45312  KL 0.00000
Iter 2000  Loss 32743.83008  IO 32743.82812  KL 0.00000
Iter 2500  Loss 25818.31641  IO 25818.31641  KL 0.00000
Iter 3000  Loss 20538.13672  IO 20538.13672  KL 0.00000
Iter 3500  Loss 17689.59961  IO 17689.59766  KL 0.00000
Iter 4000  Loss 14909.35254  IO 14909.35156  KL 0.00000
Iter 4500  Loss 14370.29297  IO 14370.29297  KL 0.00000
Iter 5000  Loss 12902.41211  IO 12902.41309  KL 0.00000
Iter 5500  Loss 11250.89258  IO 7528.57910  KL 3719.44409
Iter 6000  Loss 11293.66211  IO 8123.63965  KL 3172.49561
Iter 6500  Loss 8796.52246  IO 6062.03809  KL 2746.59570
Iter 7000  Loss 7697.09961  IO 5657.75244  KL 2043.03003
Iter 7500  Loss 6447.43848  IO 5071.35840  KL 1376.56201
Iter 8000  Loss 6018.14551  IO 4781.01416  KL 1230.21765
Iter 8500  Loss 5852.41113  IO 4966.85645  KL 885.51282
Iter 9000  Loss 5275.86621  IO 4532.20703  KL 736.45306
Iter 9500  Loss 4792.92871  IO 4146.44775  KL 645.35278
Iter 10000  Loss 4974.43945  IO 4511.47803  KL 455.69690
Iter 10500  Loss 4770.21484  IO 4387.34375  KL 386.65265
Iter 11000  Loss 4611.17090  IO 4262.24121  KL 349.37592
Iter 11500  Loss 4615.71973  IO 4302.07178  KL 294.04266
Iter 12000  Loss 4681.11182  IO 4467.43262  KL 213.27617
Iter 12500  Loss 4296.66504  IO 4083.57935  KL 212.29581
Iter 13000  Loss 4130.70996  IO 3941.72949  KL 191.62460
Iter 13500  Loss 4232.11328  IO 4066.77441  KL 166.32190
Iter 14000  Loss 4164.57617  IO 4048.92847  KL 131.70024
Iter 14500  Loss 3743.37988  IO 3612.32129  KL 127.93317
Iter 15000  Loss 3719.95239  IO 3598.40918  KL 133.18594
Iter 15500  Loss 4058.62842  IO 3952.87915  KL 102.73597
Iter 16000  Loss 4225.41406  IO 4105.35938  KL 113.28661
Iter 16500  Loss 3826.09521  IO 3712.00220  KL 106.26183
Iter 17000  Loss 3828.25928  IO 3707.17700  KL 104.51952
Iter 17500  Loss 3757.21948  IO 3654.45093  KL 104.42756
Iter 18000  Loss 3547.78076  IO 3440.02637  KL 98.38105
Iter 18500  Loss 4271.49707  IO 4119.08740  KL 132.80524
Iter 19000  Loss 3605.43286  IO 3493.32520  KL 99.60316
Iter 19500  Loss 3784.39941  IO 3681.39258  KL 96.68244
Iter 20000  Loss 3609.46802  IO 3505.76221  KL 96.11894

Warning (from warnings module):
  File "C:\Users\Nick\AppData\Local\Programs\Python\Python36\lib\site-packages\matplotlib\pyplot.py", line 514
    max_open_warning, RuntimeWarning)
RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
Iter 20500  Loss 3379.31812  IO 3263.78589  KL 94.24892
Iter 21000  Loss 3308.20264  IO 3200.31738  KL 98.98872
Iter 21500  Loss 3603.04614  IO 3510.55811  KL 100.12681
Iter 22000  Loss nan  IO 16068.35156  KL nan

Warning (from warnings module):
  File "C:\Users\Nick\AppData\Local\Programs\Python\Python36\lib\site-packages\matplotlib\image.py", line 395
    dv = (np.float64(self.norm.vmax) -
UserWarning: Warning: converting a masked element to nan.

Warning (from warnings module):
  File "C:\Users\Nick\AppData\Local\Programs\Python\Python36\lib\site-packages\matplotlib\image.py", line 396
    np.float64(self.norm.vmin))
UserWarning: Warning: converting a masked element to nan.

Warning (from warnings module):
  File "C:\Users\Nick\AppData\Local\Programs\Python\Python36\lib\site-packages\matplotlib\image.py", line 403
    a_min = np.float64(newmin)
UserWarning: Warning: converting a masked element to nan.

Warning (from warnings module):
  File "C:\Users\Nick\AppData\Local\Programs\Python\Python36\lib\site-packages\matplotlib\image.py", line 408
    a_max = np.float64(newmax)
UserWarning: Warning: converting a masked element to nan.

Warning (from warnings module):
  File "C:\Users\Nick\AppData\Local\Programs\Python\Python36\lib\site-packages\matplotlib\colors.py", line 918
    dtype = np.min_scalar_type(value)
UserWarning: Warning: converting a masked element to nan.

Warning (from warnings module):
  File "C:\Users\Nick\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\ma\core.py", line 713
    data = np.array(a, copy=False, subok=subok)
UserWarning: Warning: converting a masked element to nan.
Iter 22500  Loss nan  IO 9809.45703  KL nan
Iter 23000  Loss nan  IO 10194.66895  KL nan
Iter 23500  Loss nan  IO 10765.55469  KL nan
Iter 24000  Loss nan  IO 10284.60938  KL nan
Iter 24500  Loss nan  IO 10324.99512  KL nan
Iter 25000  Loss nan  IO 11325.59180  KL nan
Iter 25500  Loss nan  IO 10303.85156  KL nan
Iter 26000  Loss nan  IO 9626.84668  KL nan